package 数组.一维数组与多维数组;

import org.junit.Test;

/*
 * 数组的概述：
 数组（Array）是多个相同类型数据按照一定顺序排列的集合并使用一个名字命名，并通过编号的方式对这些数据进行统一管理
 
 数组相关的概念：
  数组名
  下标（或索引）
  元素
  数组的长度
  
  数组特点：
  1.数组是有序排列的
  2.数组是引用数据类型的变量。
  数组的类型既可以是基本数据类型，也可以是引用数据类型
  3.创建数组对象会在内存中开辟一整块连续的空间
  4.数组的长度一旦确定，就不能修改
  
  数组分类：
  按照维数：一维数组，二维数组，.....
  按照数组元素的类型：基本数据类型元素的数组，引用数据类型元素的数组
  
  一维数组的使用：
  一维数组的声明和初始化
  如何调用数组的指定位置的元素
  如何获取数组的长度
  如何遍历数组
  数组元素的默认初始化值
  数组的内存解析
  
*/
public class 一维数组 {

    /**
     * 一维数组的创建
     */
    @Test
    public void test1() {
        int[] array1 = new int[]{1, 2, 3};//静态初始化：数组的初始化和数组元素的赋值同时进行
        int[] array2 = {1, 2, 3};//静态初始化：数组的初始化和数组元素的赋值同时进行
        String[] array3 = new String[3];//动态初始化:数组的初始化和数组元素的赋值操作分开进行
        array3[0] = "A";// 通过下标添加元素
        array3[1] = "B";// 通过下标添加元素
        array3[2] = "C";// 通过下标添加元素
    }

    /**
     * 一维数组的访问
     */
    @Test
    public void test2() {
        int[] array = {1, 2, 3};//静态初始化：数组的初始化和数组元素的赋值同时进行
        System.out.println(array.length);// 查看数组长度
        System.out.println(array[0]);// 通过数组下标访问数组元素
        System.out.println(array[1]);// 通过数组下标访问数组元素
        System.out.println(array[2]);// 通过数组下标访问数组元素
    }


    /**
     * 一维数组的遍历
     */
    @Test
    public void test3() {
        int[] array = {1, 2, 3};//静态初始化：数组的初始化和数组元素的赋值同时进行
        for (int i = 0; i < array.length; i++) {
            System.out.println(array[i]);
        }
    }
}
